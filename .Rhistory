x <- "Hello World!"
printOx)
print(x)
print(x)
print(x)
x <- "Hello world!"
clear
cls
print(x)
"Hello World!" -> z
# R Language Basics
# Assignment operators
x <- "Hello World!"
y = "Hello World!"
"Hello World!" -> z
x
l <- TRUE
i <- 123L
n <- 1.23
d <- as.Date("2001-02-03")
c <- "ABC 123"
l
n
n
c
d
f <- function(x) { x + 1 }
f(2)
v <- c(1, 2, 3);
v <- c(1, 2, 3);
v
m
m
m <- matrix(
data = 1:6,
nrow = 2,
ncol = 3
)
m
a <- array(
data = 1:8,
dim = c(2, 2, 2)
)
a
l <- list(TRUE, 123L, 2.34, "abc")
l
ries <- c("Male", "Female", "Male", "Male", )
factor <- factor(categories)
factor
categories <- c("Male", "Female", "Male", "Male",
factor <- factor(categories)
factor
categories <- c("Male", "Female", "Male", "Male", "Female")
factor <- factor(categories)
factor
levels(factor)
unclass(factor)
Name = c("Cat", "Dog", "Cow", "Pig"),
HowMany = c(5, 10, 15, 20),
IsPet = c(TRUE, TRUE, FALSE, FALSE)
)
Name = c("Cat", "Dog", "Cow", "Pig"),
HowMany = c(5, 10, 15, 20),
IsPet = c(TRUE, TRUE, FALSE, FALSE)
)
df
df <- data.frame(
Name = c("Cat", "Dog", "Cow", "Pig"),
HowMany = c(5, 10, 15, 20),
IsPet = c(TRUE, TRUE, FALSE, FALSE)
)
df
df[1, 2]
df[1, ]
df[ , 2]
df[["HowMany"]]
df$HowMany
df[c(2, 4), ]
df[2:4, ]
df[c(TRUE, FALSE, TRUE, FALSE), ]
df[df$IsPet == TRUE]
df[df$HowMany > 10]
df[df$HowMany > 10, ]
df[df$Name %in$ c("Cat", "Cow"), ]
df[df$Name %in% c("Cat", "Cow"), ]
1 + 2
c(1, 2, 3) + c(2, 4, 6)
1+1
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
m
n <- matrix(1:6, 2, 3)
m == n
identical(m, n)
library("dplyr")
install.packages("dplyr")
library("dplyr")
?data.frame
setwd("C:/Pluralsight")
setwd("C:/Pluralsight")
setwd("C:/Users/Gerald/Documents/dev/github-data-mining")
cars <- read.table(
file = "Cars.txt",
header = TRUE,
sep = "\t",
quote = "\""
head(cars)
setwd(getwd())
cars <- read.table(
file = "Cars.txt",
header = TRUE,
sep = "\t",
quote = "\""
)
head(cars)
library(dplyr)
temp <- select(
.data = cars,
Transmission,
Cylinders,
Fuel.Economy
)
head(temp)
select(
.data = temp,
Transmission = "Autonmatic"
)
mp <- select(
.data = temp,
Transmission = "Automatic"
)
.data = temp,
Transmission == "Automatic"
)
er(
.data = temp,
Transmission == "Automatic"
)
temp <- filter(
.data = temp,
Transmission == "Automatic"
)
head(temp)
temp <- mutate(
.data = temp,
Cosumption = Fuel.Economy * 0.425
)
head(temp)
temp <- group_by(
.data = temp,
Cylinders
)
head(temp)
temp <- summarize(
.data = temp,
Avg.Consumption = mean(Consumption)
)
temp <- summarize(
.data = temp,
Avg.Consumption = mean(Consumption)
)
temp <- mutate(
.data = temp,
Consumption = Fuel.Economy * 0.425
)
head(temp)
temp <- group_by(
.data = temp,
Cylinders
)
head(temp)
temp <- summarize(
.data = temp,
Avg.Consumption = mean(Consumption)
)
head(temp)
efficiency <- as.data.frame(temp)
print(efficiency)
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic") %>%
mutate(Consumption = Fuel.Economy = 0.425) %>%
group_by(Cylinders) %>%
summarize(Avg.Consumption = mean(Consumption)) %>%
arrange(desc(Avg.Consumption)) %>%
as.data.frame()
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic") %>%
mutate(Consumption = Fuel.Economy = 0.425) %>%
group_by(Cylinders) %>%
summarize(Avg.Consumption = mean(Consumption)) %>%
arrange(desc(Avg.Consumption)) %>%
as.data.frame()
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic") %>%
mutate(Consumption = Fuel.Economy * 0.425) %>%
group_by(Cylinders) %>%
summarize(Avg.Consumption = mean(Consumption)) %>%
arrange(desc(Avg.Consumption)) %>%
as.data.frame()
print(efficiency)
write.csv(
x = efficiency,
file = "FuelEfficiencyTutorial.csv",
row.names = FALSE
)
